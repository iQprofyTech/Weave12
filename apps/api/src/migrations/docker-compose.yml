services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: weave12
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    volumes:
      - pg:/var/lib/postgresql/data

  redis:
    image: redis:7
    command: ["redis-server", "--save", ""]
    volumes:
      - redis:/data

  minio:
    image: minio/minio:RELEASE.2024-06-13T22-53-53Z
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY:-minioadmin}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY:-minioadmin}
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio:/data

  api:
    build:
      context: ../../
      dockerfile: infra/docker/Dockerfile.api
    env_file:
      - ./.env
    depends_on:
      - postgres
      - redis
      - minio

  worker:
    build:
      context: ../../
      dockerfile: infra/docker/Dockerfile.worker
    env_file:
      - ./.env
    depends_on:
      - api

  web:
    build:
      context: ../../
      dockerfile: infra/docker/Dockerfile.web
    env_file:
      - ./.env
    depends_on:
      - api

  nginx:
    image: nginx:1.25
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - certs:/etc/letsencrypt
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
      - api

  loki:
    image: grafana/loki:2.9.1
    command: ["-config.file=/etc/loki/local-config.yml"]
    volumes:
      - ./loki-config.yml:/etc/loki/local-config.yml:ro

  promtail:
    image: grafana/promtail:2.9.1
    command: ["-config.file=/etc/promtail/config.yml"]
    volumes:
      - /var/log:/var/log:ro
      - ./promtail-config.yml:/etc/promtail/config.yml:ro
    depends_on:
      - loki

  prometheus:
    image: prom/prometheus:v2.53.0
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:10.4.2
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

volumes:
  pg: {}
  redis: {}
  minio: {}
  certs: {}