datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           String   @id @default(cuid())
  telegramId   String   @unique
  username     String?
  avatar       String?
  createdAt    DateTime @default(now())
  subscriptions Subscription[]
  projects     Project[]
  quota        Quota?
}

model Subscription {
  id              String   @id @default(cuid())
  userId          String
  plan            String
  status          String
  currentPeriodEnd DateTime
  user            User     @relation(fields: [userId], references: [id])
}

model Project {
  id        String   @id @default(cuid())
  userId    String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  nodes     Node[]
  edges     Edge[]
}

model Node {
  id         String   @id @default(cuid())
  projectId  String
  type       String
  model      String
  aspectRatio String
  prompt     String
  x          Int
  y          Int
  width      Int
  height     Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  project    Project  @relation(fields: [projectId], references: [id])
  jobs       Job[]
}

model Edge {
  id            String   @id @default(cuid())
  projectId     String
  sourceNodeId  String
  targetNodeId  String
  createdAt     DateTime @default(now())
  project       Project  @relation(fields: [projectId], references: [id])
}

model Job {
  id        String   @id @default(cuid())
  nodeId    String
  type      String
  status    String
  inputRefs String[]
  outputRefs String[]
  error     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  node      Node     @relation(fields: [nodeId], references: [id])
}

model Asset {
  id        String   @id @default(cuid())
  userId    String
  type      String
  url       String
  meta      Json
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

model Quota {
  id               String   @id @default(cuid())
  userId           String
  freeCreditsTotal Int
  freeCreditsUsed  Int
  resetAt          DateTime
  user             User     @relation(fields: [userId], references: [id])
}
